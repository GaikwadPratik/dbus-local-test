// Code generated by dbus-codegen-go DO NOT EDIT.
package main

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceComHiveioVmmanager               = "com.hiveio.vmmanager"
	InterfaceOrgFreedesktopDBusIntrospectable = "org.freedesktop.DBus.Introspectable"
)

// ComHiveioVmmanagerer is com.hiveio.vmmanager interface.
type ComHiveioVmmanagerer interface {
	// CheckHostForMigration is com.hiveio.vmmanager.CheckHostForMigration method.
	CheckHostForMigration(guestName string, cpuxml string) (result bool, err *dbus.Error)
	// RecoverGuest is com.hiveio.vmmanager.RecoverGuest method.
	RecoverGuest(guestName string, reason string) (err *dbus.Error)
	// RecoverUservolume is com.hiveio.vmmanager.RecoverUservolume method.
	RecoverUservolume(guestName string, username string) (err *dbus.Error)
}

// ExportComHiveioVmmanager exports the given object that implements com.hiveio.vmmanager on the bus.
func ExportComHiveioVmmanager(conn *dbus.Conn, path dbus.ObjectPath, v ComHiveioVmmanagerer) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"CheckHostForMigration": v.CheckHostForMigration,
		"RecoverGuest":          v.RecoverGuest,
		"RecoverUservolume":     v.RecoverUservolume,
	}, path, InterfaceComHiveioVmmanager)
}

// UnexportComHiveioVmmanager unexports com.hiveio.vmmanager interface on the named path.
func UnexportComHiveioVmmanager(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceComHiveioVmmanager)
}

// UnimplementedComHiveioVmmanager can be embedded to have forward compatible server implementations.
type UnimplementedComHiveioVmmanager struct{}

func (*UnimplementedComHiveioVmmanager) iface() string {
	return InterfaceComHiveioVmmanager
}

func (*UnimplementedComHiveioVmmanager) CheckHostForMigration(guestName string, cpuxml string) (result bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedComHiveioVmmanager) RecoverGuest(guestName string, reason string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedComHiveioVmmanager) RecoverUservolume(guestName string, username string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

// OrgFreedesktopDBusIntrospectableer is org.freedesktop.DBus.Introspectable interface.
type OrgFreedesktopDBusIntrospectableer interface {
	// Introspect is org.freedesktop.DBus.Introspectable.Introspect method.
	Introspect() (out string, err *dbus.Error)
}

// ExportOrgFreedesktopDBusIntrospectable exports the given object that implements org.freedesktop.DBus.Introspectable on the bus.
func ExportOrgFreedesktopDBusIntrospectable(conn *dbus.Conn, path dbus.ObjectPath, v OrgFreedesktopDBusIntrospectableer) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"Introspect": v.Introspect,
	}, path, InterfaceOrgFreedesktopDBusIntrospectable)
}

// UnexportOrgFreedesktopDBusIntrospectable unexports org.freedesktop.DBus.Introspectable interface on the named path.
func UnexportOrgFreedesktopDBusIntrospectable(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceOrgFreedesktopDBusIntrospectable)
}

// UnimplementedOrgFreedesktopDBusIntrospectable can be embedded to have forward compatible server implementations.
type UnimplementedOrgFreedesktopDBusIntrospectable struct{}

func (*UnimplementedOrgFreedesktopDBusIntrospectable) iface() string {
	return InterfaceOrgFreedesktopDBusIntrospectable
}

func (*UnimplementedOrgFreedesktopDBusIntrospectable) Introspect() (out string, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
