// Code generated by dbus-codegen-go DO NOT EDIT.
package main

import (
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceComHiveioVmManager = "com.hiveio.vm.Manager"
)

// ComHiveioVmManagerer is com.hiveio.vm.Manager interface.
type ComHiveioVmManagerer interface {
	// CheckHostForMigration is com.hiveio.vm.Manager.CheckHostForMigration method.
	CheckHostForMigration(guestName string, cpuxml string) (result bool, err *dbus.Error)
	// RecoverGuest is com.hiveio.vm.Manager.RecoverGuest method.
	RecoverGuest(guestName string, reason string) (err *dbus.Error)
	// RecoverUservolume is com.hiveio.vm.Manager.RecoverUservolume method.
	RecoverUservolume(guestName string, username string) (err *dbus.Error)
}

// ExportComHiveioVmManager exports the given object that implements com.hiveio.vm.Manager on the bus.
func ExportComHiveioVmManager(conn *dbus.Conn, path dbus.ObjectPath, v ComHiveioVmManagerer) error {
	return conn.ExportSubtreeMethodTable(map[string]interface{}{
		"CheckHostForMigration": v.CheckHostForMigration,
		"RecoverGuest":          v.RecoverGuest,
		"RecoverUservolume":     v.RecoverUservolume,
	}, path, InterfaceComHiveioVmManager)
}

// UnexportComHiveioVmManager unexports com.hiveio.vm.Manager interface on the named path.
func UnexportComHiveioVmManager(conn *dbus.Conn, path dbus.ObjectPath) error {
	return conn.Export(nil, path, InterfaceComHiveioVmManager)
}

// UnimplementedComHiveioVmManager can be embedded to have forward compatible server implementations.
type UnimplementedComHiveioVmManager struct{}

func (*UnimplementedComHiveioVmManager) iface() string {
	return InterfaceComHiveioVmManager
}

func (*UnimplementedComHiveioVmManager) CheckHostForMigration(guestName string, cpuxml string) (result bool, err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedComHiveioVmManager) RecoverGuest(guestName string, reason string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}

func (*UnimplementedComHiveioVmManager) RecoverUservolume(guestName string, username string) (err *dbus.Error) {
	err = &dbus.ErrMsgUnknownMethod
	return
}
