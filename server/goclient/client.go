// Code generated by dbus-codegen-go DO NOT EDIT.
package main

import (
	"context"
	"github.com/godbus/dbus/v5"
)

// Interface name constants.
const (
	InterfaceCom_Hiveio_Vm_Manager               = "com.hiveio.vm.Manager"
	InterfaceOrg_Freedesktop_DBus_Introspectable = "org.freedesktop.DBus.Introspectable"
)

// NewCom_Hiveio_Vm_Manager creates and allocates com.hiveio.vm.Manager.
func NewCom_Hiveio_Vm_Manager(object dbus.BusObject) *Com_Hiveio_Vm_Manager {
	return &Com_Hiveio_Vm_Manager{object}
}

// Com_Hiveio_Vm_Manager implements com.hiveio.vm.Manager D-Bus interface.
type Com_Hiveio_Vm_Manager struct {
	object dbus.BusObject
}

// CheckHostForMigration calls com.hiveio.vm.Manager.CheckHostForMigration method.
func (o *Com_Hiveio_Vm_Manager) CheckHostForMigration(ctx context.Context, guestName string, cpuxml string) (result bool, err error) {
	err = o.object.CallWithContext(ctx, InterfaceCom_Hiveio_Vm_Manager+".CheckHostForMigration", 0, guestName, cpuxml).Store(&result)
	return
}

// RecoverGuest calls com.hiveio.vm.Manager.RecoverGuest method.
func (o *Com_Hiveio_Vm_Manager) RecoverGuest(ctx context.Context, guestName string, reason string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceCom_Hiveio_Vm_Manager+".RecoverGuest", 0, guestName, reason).Store()
	return
}

// RecoverUservolume calls com.hiveio.vm.Manager.RecoverUservolume method.
func (o *Com_Hiveio_Vm_Manager) RecoverUservolume(ctx context.Context, guestName string, username string) (err error) {
	err = o.object.CallWithContext(ctx, InterfaceCom_Hiveio_Vm_Manager+".RecoverUservolume", 0, guestName, username).Store()
	return
}

// NewOrg_Freedesktop_DBus_Introspectable creates and allocates org.freedesktop.DBus.Introspectable.
func NewOrg_Freedesktop_DBus_Introspectable(object dbus.BusObject) *Org_Freedesktop_DBus_Introspectable {
	return &Org_Freedesktop_DBus_Introspectable{object}
}

// Org_Freedesktop_DBus_Introspectable implements org.freedesktop.DBus.Introspectable D-Bus interface.
type Org_Freedesktop_DBus_Introspectable struct {
	object dbus.BusObject
}

// Introspect calls org.freedesktop.DBus.Introspectable.Introspect method.
func (o *Org_Freedesktop_DBus_Introspectable) Introspect(ctx context.Context) (out string, err error) {
	err = o.object.CallWithContext(ctx, InterfaceOrg_Freedesktop_DBus_Introspectable+".Introspect", 0).Store(&out)
	return
}
